# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: get Fiji(ImageJ) zip
      run: wget https://downloads.imagej.net/fiji/latest/fiji-linux64.zip
      
    - name: unzip Fiji
      run: unzip fiji-linux64.zip 

    - name: Make envfile
      uses: SpicyPizza/create-envfile@v1
      with:
        envkey_RUN_E2E_TESTS: "true"
        envkey_IMAGEJ_DIRECTORY_INSTALLED: "${{ github.workspace }}/Fiji.app"

    - uses: pCYSl5EDgo/cat@master
      id: hello
      with:
        path: .env

    - run: echo $TEXT
      env:
        TEXT: ${{ steps.hello.outputs.text }}

    - name: Install Dependencies
      run: npm install
      
    - name: Build
      run: npm run build
    
    - name: Run tests
      run: npm run test
